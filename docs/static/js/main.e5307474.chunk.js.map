{"version":3,"sources":["assets/img/27.1 burger-logo.png.png","components/Logo/Logo.js","components/Navigation/NavigationList/NavigationList.js","components/UI/Backdrop.js","components/SideDrawer/SideDrawer.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients.js","components/Burger/Burger.js","components/Controller/Control.js","components/Controller/Controller.js","components/UI/Modal.js","components/Burger/OrderSummary.js","components/UI/spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/action/action.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","store/reducer/reduer.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","props","to","onClick","logoClick","src","burgerLogo","alt","NavigationList","className","exact","hideSideDrawer","isAuthenticate","Backdrop","show","backdropClicked","SideDrawer","classname","backdropClick","Toolbar","state","showSideDrawer","menuClickHandler","e","setState","backDropClickHandler","this","isAuth","React","Component","Layout","isLogged","children","connect","idToken","BurgerIngredients","ingredient","type","ingredients","dispatch","addIngredients","ing","withRouter","Bacon","Salad","Cheese","Meat","transformedIng","Object","keys","map","ingKey","Array","k","i","key","reduce","preArr","currEle","concat","length","Control","ingredientControl","incIng","decIng","disabled","isDisabled","Controller","IngControls","ingInfo","ingCtr","inc","dec","isOrderBtnDisable","orderClickHandler","Modal","price","ingredientsList","ingre","toFixed","cancelClick","continueOrder","Spinner","withErrorHandler","WrappedComponent","axios","_isMounted","resetError","error","reqInterceptor","interceptors","request","use","req","Promise","reject","resInterceptor","response","value","eject","message","axiosInstance","create","baseURL","setPrice","fetchIngredients","get","then","data","catch","authSuccess","localId","logout","localStorage","removeItem","console","log","authTimeout","timeout","setTimeout","Number","ING_PRICE","BurgerBuilder","incIngredient","count","ingred","newPrice","decIngredient","isAuthenticated","showSummaryModal","movingToAuth","history","push","backToOrderClickHandler","procedOrder","pathname","showSpinner","summary","mainBody","ingredientsInfo","orderButtonState","action","replace","continueClick","emailRegex","RegExp","ContactData","name","email","street","postal","route","formFieldsValidation","showError","handleSubmit","event","preventDefault","isValid","field","order","adress","userId","post","token","inputChangedHandler","target","classList","contains","add","stateClone","fieldsClone","trim","test","isNaN","persist","remove","form","onSubmit","placeholder","onChange","formError","Checkout","continueCheckout","counter","checkout","path","match","render","Order","join","Orders","orders","queryParams","resp","id","orderContent","reverse","Auth","password","isSignUp","auth","resetInputField","forEach","input","document","getElementsByName","accountSwitchHandler","resetLoginError","prevState","responseError","errors","reason","showAuthSpinner","loginError","reduxHistory","user","returnSecureToken","url","axiosSignup","reponse","expireDate","Date","getTime","expiresIn","setItem","autheFromHome","authFailed","Logout","App","checkLocalStorage","excat","component","getItem","initState","orderError","reducer","Boolean","window","location","hostname","store","createStore","applyMiddleware","storeDispatch","storeGetState","getState","currentAction","app","basename","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5307474.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/27.1 burger-logo.png.b8503d26.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/img/27.1 burger-logo.png.png';\r\nimport {Link}  from 'react-router-dom'\r\n\r\n\r\n\r\nconst Logo=(props)=>{\r\n\r\n    return(\r\n        <Link to=\"/\" onClick={props.logoClick}><img src={burgerLogo} alt=\"Burger Builder\"/></Link>\r\n    )\r\n};\r\n\r\n\r\nexport default Logo;","import React from 'react';\r\nimport {NavLink}  from 'react-router-dom';\r\n\r\n\r\n\r\nconst NavigationList=(props)=>{\r\n\r\n    return(\r\n        <ul className=\"navList\">\r\n            <li>\r\n                <NavLink to=\"/\" exact onClick={props.hideSideDrawer}>Burger Builder</NavLink>\r\n            </li>\r\n            {props.isAuthenticate\r\n                ?<li>\r\n                    <NavLink to=\"/orders\" onClick={props.hideSideDrawer}>Orders</NavLink>\r\n                </li>\r\n\r\n                :null\r\n            }\r\n            <li>\r\n                {!props.isAuthenticate\r\n                        ?<NavLink to=\"/auth\" onClick={props.hideSideDrawer}>Authenticate</NavLink>\r\n                        :<NavLink to=\"/logout\" onClick={props.hideSideDrawer}>Logout</NavLink>\r\n                }\r\n            </li>\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default NavigationList;","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Backdrop=(props)=>\r\n    props.show ? <div className=\"backdrop\" onClick={props.backdropClicked} /> : null;\r\n\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport Logo from '../Logo/Logo'\r\nimport NavigationList from '../Navigation/NavigationList/NavigationList'\r\nimport Backdrop from '../UI/Backdrop';\r\n\r\n\r\nconst SideDrawer=(props)=>{\r\n\r\n    let classname=\"sideDrawer\";\r\n\r\n    if(!props.show){\r\n        classname+=\" hidesideDrawer\"\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Backdrop backdropClicked={props.backdropClick} show={props.show}/>\r\n            <div className={classname}>\r\n                <Logo logoClick={props.backdropClick}/>\r\n                <NavigationList\r\n                    isAuthenticate={props.isAuthenticate}\r\n                    hideSideDrawer={props.backdropClick} />\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default SideDrawer;","import React from 'react';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationList from '../NavigationList/NavigationList'\r\nimport SideDrawer from '../../SideDrawer/SideDrawer'\r\n\r\n\r\n\r\nclass Toolbar extends React.Component{\r\n\r\n\r\n        state={\r\n            showSideDrawer:false,\r\n        };\r\n\r\n\r\n        menuClickHandler=(e)=>{\r\n            this.setState({\r\n                showSideDrawer:!this.state.showSideDrawer\r\n            })\r\n        };\r\n        backDropClickHandler=()=>{\r\n            this.setState({\r\n                showSideDrawer:!this.state.showSideDrawer\r\n            })\r\n        };\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"toolbar\">\r\n                <div>\r\n                    <div className=\"menuContainer\" onClick={this.menuClickHandler}>\r\n                        <div/>\r\n                        <div/>\r\n                        <div/>\r\n                    </div>\r\n                </div>\r\n                <Logo/>\r\n                <NavigationList\r\n                    isAuthenticate={this.props.isAuth}/>\r\n                <SideDrawer\r\n                    isAuthenticate={this.props.isAuth}\r\n                    show={this.state.showSideDrawer}\r\n                    backdropClick={this.backDropClickHandler}\r\n                />\r\n            </header>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends React.Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <Toolbar isAuth={this.props.isLogged}/>\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n       isLogged: state.idToken !==null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\n\r\n\r\nconst BurgerIngredients=(props)=>{\r\n\r\n    let ingredient=null;\r\n\r\n    switch (props.type) {\r\n        case('BreadTop'):\r\n            ingredient = <div className='BreadTop'>\r\n                <div className='Seeds1'>\r\n                </div>\r\n                <div className='Seeds2'>\r\n                </div>\r\n            </div>;\r\n            break;\r\n\r\n        case('BreadBottom'):\r\n            ingredient = <div className='BreadBottom'/>;\r\n            break;\r\n\r\n\r\n        case('Meat'):\r\n            ingredient = <div className='Meat'/>;\r\n            break;\r\n\r\n\r\n        case('Cheese'):\r\n            ingredient = <div className='Cheese'/>;\r\n            break;\r\n\r\n        case('Salad'):\r\n            ingredient = <div className='Salad'/>;\r\n            break;\r\n\r\n        case('Bacon'):\r\n            ingredient = <div className='Bacon'/>;\r\n            break;\r\n\r\n        default:\r\n            ingredient=null;\r\n\r\n    }\r\n\r\n    return ingredient;\r\n\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\nimport BurgerIngredients from './BurgerIngredients';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './BurgerIngredient.css';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst Burger=(props)=>{\r\n\r\n\r\n\r\n    if(!props.ingredients){\r\n        props.addIngredients({\r\n            Bacon:0,\r\n            Salad:0,\r\n            Cheese:0,\r\n            Meat:0,\r\n        });\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    let transformedIng = Object.keys(props.ingredients).map(\r\n        ingKey => {\r\n            return [...Array(props.ingredients[ingKey])].map(\r\n                (k,i) => {\r\n                    return <BurgerIngredients type={ingKey} key={ingKey+i}/>;\r\n                }\r\n            );\r\n        }\r\n    ).reduce((preArr,currEle)=>{\r\n        return preArr.concat(currEle);\r\n    },[]);\r\n\r\n\r\n    if(transformedIng.length===0){\r\n\r\n        transformedIng=<p>Please start adding ingredints</p>;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className='burgerContainer'>\r\n            <BurgerIngredients type='BreadTop'/>\r\n            {transformedIng}\r\n            <BurgerIngredients type='BreadBottom'/>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        ingredients:state.ingredients,\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n    return{\r\n        addIngredients : (ing)=> dispatch({type:'INGREDIENTS',ingredients:ing}),\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(Burger));","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst Control=(props)=>{\r\n\r\n\r\n    return(\r\n        <div className='IngrediendControl'>\r\n            <p>\r\n                {props.ingredientControl}\r\n            </p>\r\n            <button onClick={()=>props.incIng(props.ingredientControl)}>\r\n                More\r\n            </button>\r\n            <button\r\n                onClick={()=>props.decIng(props.ingredientControl)}\r\n                disabled={props.isDisabled}>\r\n                Less\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\nexport default Control;","import React from 'react';\r\nimport Control from './Control';\r\n\r\n\r\n\r\nconst Controller=(props)=>{\r\n\r\n    const IngControls=Object.keys(props.ingInfo);\r\n    return(\r\n        <div className=\"Controller\">\r\n            {\r\n                IngControls.map(ingCtr=>{\r\n                    return <Control\r\n                                ingredientControl={ingCtr}\r\n                                key={ingCtr}\r\n                                incIng={props.inc}\r\n                                decIng={props.dec}\r\n                                isDisabled={props.ingInfo[ingCtr]}/>\r\n                })\r\n            }\r\n\r\n\r\n            <button className=\"orderNowButton\"\r\n                    disabled={props.isOrderBtnDisable}\r\n                    onClick={props.orderClickHandler}>\r\n                {props.isAuth\r\n                    ?\"Order Now\"\r\n                    :\"Sign Up to Order\"}</button>\r\n        </div>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Backdrop from './Backdrop';\r\n\r\n\r\n\r\nconst Modal=(props)=>{\r\n\r\n\r\n    let classname=\"Modal\";\r\n\r\n    if(!props.show){\r\n        classname+=\" hideModal\"\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <Backdrop backdropClicked={props.backdropClick} show={props.show}/>\r\n            <div className={classname}>\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nconst OrderSummary=(props)=>{\r\n\r\n    let ingredientsList=Object.keys(props.ingredients).map(ingre=>{\r\n        return <li key={ingre}>{ingre+\": \"+ props.ingredients[ingre]}</li>;\r\n    });\r\n\r\n    return(\r\n        <div className=\"orderDiv\">\r\n            <h2>Your Order</h2>\r\n            <p>\r\n                A dlicious Burger with following Ingredients:\r\n            </p>\r\n            <ul>\r\n                {ingredientsList}\r\n            </ul>\r\n\r\n            <h3>Price: {props.price.toFixed(2)} $</h3>\r\n            <h3>Continue to checkout?</h3>\r\n\r\n            <button className=\"cancelBtn\" onClick={props.cancelClick}>CANCEL</button>\r\n            <button className=\"contBtn\" onClick={props.continueOrder}>CONTINUE</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        ingredients:state.ingredients,\r\n        price:state.price\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(OrderSummary);","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ()=>{\r\n\r\n    return(\r\n        <div className=\"lds-ring\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport Modal from '../../components/UI/Modal';\r\n\r\nconst withErrorHandler =(WrappedComponent,axios)=>{\r\n\r\n    return class extends React.Component{\r\n\r\n        _isMounted = false;\r\n\r\n        constructor(props){\r\n            super(props);\r\n\r\n            this.state={\r\n                error:null\r\n            };\r\n\r\n\r\n            this.reqInterceptor = axios.interceptors.request.use(req=>{\r\n                if(this._isMounted)\r\n                    this.setState({error:null});\r\n                return req;\r\n\r\n            }, function (error) {\r\n                if(this._isMounted)\r\n                    this.setState({\r\n                    error:error\r\n                });\r\n                return Promise.reject(error);\r\n            });\r\n\r\n\r\n            this.resInterceptor= axios.interceptors.response.use(value => value,error => {\r\n                if(this._isMounted)\r\n                    this.setState({error:error});\r\n                return Promise.reject(error);\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n        componentDidMount(){\r\n            this._isMounted = true;\r\n        }\r\n\r\n\r\n        componentWillUnmount(){\r\n            this._isMounted = false;\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        resetError=()=>{\r\n            this.setState({error:null})\r\n        };\r\n\r\n        render(){\r\n\r\n\r\n            return(\r\n                <>\r\n                    <Modal show={this.state.error} backdropClick={this.resetError}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </>\r\n\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default withErrorHandler;\r\n\r\n","import axios from \"axios\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL:\"https://burger-builder-3de04.firebaseio.com/\",\r\n});\r\n\r\n\r\nexport default axiosInstance;","import axios from \"../../axios-orders\";\r\nimport axiosSignup from \"axios\";\r\n\r\nexport const addIngredients = (ing)=>{\r\n    return {type:'INGREDIENTS',ingredients:ing}\r\n};\r\n\r\nexport const setPrice = (price)=>{\r\n    return {type:'PRICE',price:price}\r\n};\r\n\r\n\r\nexport const fetchIngredients = ()=>{\r\n\r\n    return function (dispatch) {\r\n        axios.get('https://burger-builder-3de04.firebaseio.com/ingredients.json')\r\n            .then(response=>{\r\n                if(!response) return;\r\n                dispatch(addIngredients(response.data));\r\n            })\r\n            .catch(error=>{\r\n                dispatch({\r\n                    type:'FETCH_ERROR',error:error\r\n                });\r\n            })\r\n    }\r\n};\r\n\r\n\r\nexport const startAuth = ()=>{\r\n\r\n    return {\r\n        type:'START_AUTH'\r\n    }\r\n};\r\n\r\nexport const authSuccess = (idToken,localId)=>{\r\n\r\n    return {\r\n        type:'AUTH_SUCCESS',\r\n        idToken:idToken,\r\n        localId:localId\r\n    }\r\n};\r\n\r\nexport const authFailed = (error)=>{\r\n\r\n    return {\r\n        type:'AUTH_FAILED',\r\n        error:error\r\n    }\r\n};\r\n\r\nexport const logout = ()=>{\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expireDate');\r\n\r\n    console.log('logout');\r\n\r\n    return {\r\n        type:'AUTH_TIMEOUT',\r\n    }\r\n};\r\n\r\n\r\nexport const authTimeout = (timeout)=>{\r\n\r\n    return dispatch=>{\r\n        setTimeout(()=>{\r\n            return dispatch(logout())\r\n        },Number(timeout)*1000);\r\n    }\r\n};\r\n\r\nexport const auth = (email,password,isSignUp,reduxHistory)=>{\r\n    return function (dispatch,state) {\r\n        dispatch(startAuth());\r\n        const user={\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken:true\r\n        };\r\n\r\n        let url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCI8e7bc0bCvZB8wrHDRbz8zDbuD8OI7qI';\r\n\r\n        if(!isSignUp)\r\n            url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCI8e7bc0bCvZB8wrHDRbz8zDbuD8OI7qI';\r\n\r\n\r\n        axiosSignup.post(url,user).then(reponse=>{\r\n\r\n            if(!reponse) return;\r\n\r\n            let expireDate = new Date(new Date().getTime() + reponse.data.expiresIn*1000);\r\n\r\n            localStorage.setItem('token',reponse.data.idToken);\r\n            localStorage.setItem('userId',reponse.data.localId);\r\n            localStorage.setItem('expireDate',expireDate);\r\n\r\n            dispatch(authSuccess(reponse.data.idToken,reponse.data.localId));\r\n            dispatch(authTimeout(reponse.data.expiresIn));\r\n\r\n            if(state().autheFromHome)\r\n                reduxHistory.push('/checkout');\r\n            else\r\n                reduxHistory.push('/');\r\n        })\r\n            .catch(error=>{\r\n                console.log(error.response);\r\n                if(!(error.response)){\r\n                    error.response={\r\n                        'data':null\r\n                    }\r\n                }\r\n                dispatch(authFailed(error.response.data));\r\n            });\r\n    }\r\n};\r\n\r\nexport const resetLoginError = ()=>{\r\n    return {\r\n        type:'RESET_LOGIN_ERROR',\r\n    }\r\n};\r\n\r\n\r\nexport const homeToAuth = ()=>{\r\n    return {\r\n        type:'HOME_TO_AUTH',\r\n    }\r\n};\r\n\r\nexport const checkLocalStorage = ()=>{\r\n    return dispatch => {\r\n        const token=localStorage.getItem('token');\r\n\r\n        if(!token){\r\n            return null;\r\n        }\r\n        else {\r\n\r\n\r\n            const userId=localStorage.getItem('userId');\r\n            const expireDate=localStorage.getItem('expireDate');\r\n\r\n            if((new Date(expireDate).getTime() - new Date().getTime()) > 0){\r\n\r\n                dispatch(authSuccess(token,userId));\r\n                dispatch(authTimeout(new Date(expireDate).getTime()/1000 - new Date().getTime()/1000));\r\n            }else{\r\n                dispatch(logout())\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n\r\n","import React from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport Controller from '../../components/Controller/Controller';\nimport Modal from '../../components/UI/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary';\nimport Spinner from'../../components/UI/spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\n\nimport {connect} from 'react-redux';\nimport * as action from '../../store/action/action'\n\nconst ING_PRICE={\n    Bacon:0.7,\n    Salad:0.3,\n    Cheese:0.4,\n    Meat:1.3,\n};\n\nclass BurgerBuilder extends React.Component{\n\n\n    constructor(props){\n\n        super(props);\n\n\n        if(!this.props.ingredients){\n            props.fetchIngredients();\n        }\n\n        this.state={\n            showSummaryModal:false,\n            showSpinner:true\n        };\n\n    }\n\n\n\n    componentDidMount(){\n            this.setState({showSpinner:false})\n    }\n\n    incIngredient=(type)=>{\n\n        let count=this.props.ingredients[type];\n        count++;\n        let ingred={\n            ...this.props.ingredients\n        };\n        ingred[type]=count;\n        let newPrice=this.props.price+ING_PRICE[type];\n\n        this.props.addIngredients(ingred);\n        this.props.setPrice(newPrice);\n\n    };\n\n\n    decIngredient=(type)=>{\n        let count=this.props.ingredients[type];\n        if(count===0)\n            return;\n\n        count--;\n        let ingred={\n            ...this.props.ingredients\n        };\n        ingred[type]=count;\n        let newPrice=this.props.price-ING_PRICE[type];\n\n        this.props.addIngredients(ingred);\n        this.props.setPrice(newPrice);\n    };\n\n    orderClickHandler=()=>{\n        if(this.props.isAuthenticated){\n            this.setState({showSummaryModal:true});\n        }\n        else{\n            this.props.movingToAuth();\n            this.props.history.push('/auth');\n        }\n    };\n\n    backToOrderClickHandler=()=>{\n        this.setState({showSummaryModal:false})\n    };\n\n\n    procedOrder= ()=>{\n\n        // let query='';\n        //\n        //\n        // for(let key in this.props.ingredients){\n        //     query+= encodeURIComponent(key)+'='+encodeURIComponent(this.props.ingredients[key]);\n        //\n        //     // count++;\n        //     // if(count<Object.keys(this.props.ingredients).length)\n        //         query+='&';\n        // }\n        //\n        // query+='price='+this.props.price.toFixed(2);\n        //\n\n\n\n        this.props.history.push({\n            pathname:'/checkout',\n            // search:query\n        });\n\n\n    };\n\n\n    render(){\n\n        let summary,mainBody;\n\n        if(this.state.showSpinner){\n            summary= <Spinner />\n        }else if(this.props.ingredients){\n            summary= <OrderSummary\n                continueOrder={this.procedOrder}\n                cancelClick={this.backToOrderClickHandler}/>;\n        }\n\n        mainBody=<Spinner/>;\n\n        if(this.props.ingredients){\n\n            let ingredientsInfo={\n                ...this.props.ingredients\n            },orderButtonState=true;\n\n            for(let key in ingredientsInfo) {\n                ingredientsInfo[key] = ingredientsInfo[key] <= 0;\n                if(!ingredientsInfo[key]){\n                    orderButtonState=false;\n                }\n            }\n\n            mainBody=(\n                <>\n                    <Burger />\n                    <h2 className='price'>{this.props.price.toFixed(2)+' $'}</h2>\n                    <Controller\n                        inc={this.incIngredient}\n                        dec={this.decIngredient}\n                        ingInfo={ingredientsInfo}\n                        isAuth={this.props.isAuthenticated}\n                        isOrderBtnDisable={orderButtonState}\n                        orderClickHandler={this.orderClickHandler}\n                    />\n                </>\n            );\n        }else if(this.props.error){\n            mainBody=<h1>Can't Load Burder.</h1>\n        }\n\n\n\n        return(\n            <>\n                <Modal show={this.state.showSummaryModal} backdropClick={this.backToOrderClickHandler}>\n                    {summary}\n                </Modal>\n                {mainBody}\n            </>\n        )\n    }\n\n}\n\nconst mapStateToProps=state=>{\n    return {\n        ingredients:state.ingredients,\n        price:state.price,\n        error:state.error,\n        isAuthenticated : state.idToken !== null\n    }\n};\n\nconst mapDispatchToProps= dispatch=>{\n    return{\n        addIngredients : (ing)=> dispatch(action.addIngredients(ing)),\n        setPrice : (price)=> dispatch(action.setPrice(price)),\n        fetchIngredients : ()=> dispatch(action.fetchIngredients()),\n        movingToAuth : ()=> dispatch(action.homeToAuth())\n    }\n};\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import React from 'react';\r\nimport './CheckoutSummary.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport {connect} from 'react-redux';\r\n\r\nconst CheckoutSummary = (props)=>{\r\n\r\n\r\n    return(\r\n        <div className='checkoutBurgerContainer'>\r\n            <h1>\r\n                The best Burger you ever tasted.\r\n            </h1>\r\n            {/*<Burger {...props} ingredients={props.ingredients}/>*/}\r\n            <Burger />\r\n            <h4 className='price'>PRICE: {props.price.toFixed(2)} USD</h4>\r\n            <div className=\"btnWrapper\">\r\n                <button className=\"cancelBtn\" onClick={()=>{props.history.replace('/')}}>BACK</button>\r\n                <button className=\"contBtn\" onClick={props.continueClick}>CONTINUE</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        price:state.price\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CheckoutSummary);","import React from 'react';\r\nimport './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as action from \"../../../store/action/action\";\r\n\r\n\r\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\nclass ContactData extends React.Component{\r\n\r\n\r\n    state={\r\n        name:'',\r\n        email:'',\r\n        street:'',\r\n        postal:'',\r\n        route:'Fastest',\r\n        showSpinner:false,\r\n        formFieldsValidation:{\r\n            name:false,\r\n            email:false,\r\n            street:false,\r\n            postal:false,\r\n        },\r\n        showError:false\r\n    };\r\n\r\n\r\n    handleSubmit=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({showSpinner:true});\r\n\r\n        let isValid=true;\r\n\r\n        for(let field in this.state.formFieldsValidation){\r\n            isValid = this.state.formFieldsValidation[field] && isValid;\r\n        }\r\n\r\n        if(!isValid){\r\n            this.setState({\r\n                showSpinner:false,\r\n                showError:true\r\n            });\r\n            return;\r\n        }else {\r\n            this.setState({\r\n                showError:false\r\n            });\r\n        }\r\n\r\n\r\n\r\n        const order={\r\n            ingredients:this.props.ingredients,\r\n            price:this.props.price,\r\n            name: this.state.name,\r\n            adress:{\r\n                street:this.state.street,\r\n                postal:this.state.postal,\r\n            },\r\n            email: this.state.email,\r\n            route: this.state.route,\r\n            userId:this.props.userId\r\n        };\r\n\r\n\r\n        axios.post('/orders.json?auth='+this.props.token,order).then(\r\n            response=>{\r\n                if(!response) return;\r\n\r\n                this.props.addIngredients({\r\n                    Bacon:0,\r\n                    Salad:0,\r\n                    Cheese:0,\r\n                    Meat:0,\r\n                });\r\n\r\n                this.props.setPrice(1);\r\n\r\n\r\n                this.setState({\r\n                    showSpinner:false\r\n                });\r\n\r\n                this.props.history.push('/');\r\n\r\n            }\r\n        ).catch(error=>{\r\n            this.setState({\r\n                    showSpinner:false\r\n            });\r\n        })\r\n\r\n    };\r\n\r\n\r\n    inputChangedHandler = (event) => {\r\n\r\n\r\n        if(!(event.target.classList.contains('touched'))){\r\n            event.target.classList.add('touched');\r\n        }\r\n\r\n        const {name,value}=event.target;\r\n\r\n        let stateClone={...this.state};\r\n        let fieldsClone={...stateClone.formFieldsValidation};\r\n\r\n\r\n        switch(name){\r\n            case \"name\":\r\n                value.trim().length >= 2 ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n            break;\r\n            case \"email\":\r\n                emailRegex.test(value) ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n            break;\r\n            case \"street\":\r\n                value.trim().length > 2 ? fieldsClone[name]=true : fieldsClone[name]=false ;\r\n            break;\r\n            case \"postal\":\r\n                value.trim().length > 4 && value.length <= 6 && (!isNaN(Number(value))) ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n            break;\r\n            default:\r\n                value.trim().length >= 3 ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n            break;\r\n        }\r\n\r\n        event.persist();\r\n\r\n        this.setState({\r\n            [name]: value,\r\n            formFieldsValidation:fieldsClone\r\n        },()=>{\r\n            if(this.state.formFieldsValidation[name] === false){\r\n                event.target.classList.add('inputError');\r\n                event.target.classList.remove('inputSuccess');\r\n            }else if(this.state.formFieldsValidation[name]){\r\n                event.target.classList.remove('inputError');\r\n                event.target.classList.add('inputSuccess');\r\n            }else if(event.target.name===\"route\"){\r\n                event.target.classList.remove('inputError');\r\n                event.target.classList.add('inputSuccess');\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n\r\n    render(){\r\n\r\n        let form=(<form className='Form' onSubmit={this.handleSubmit}>\r\n            <input type=\"text\" name='name' placeholder='Your Name' onChange={this.inputChangedHandler} value={this.state.name} />\r\n            <input type=\"text\" name='email' placeholder='Your Email' onChange={this.inputChangedHandler} value={this.state.email}/>\r\n            <input type=\"text\" name='street' placeholder='Street Number' onChange={this.inputChangedHandler} value={this.state.street}/>\r\n            <input type=\"text\" name='postal' placeholder='Postal Code' onChange={this.inputChangedHandler} value={this.state.postal}/>\r\n            <select name=\"route\" onChange={this.inputChangedHandler}>\r\n                <option value=\"Fastest\">Fastest</option>\r\n                <option value=\"Cheapest\">Cheapest</option>\r\n            </select>\r\n            <button type='submit' className='contBtn'>Submit</button>\r\n        </form>);\r\n\r\n        if(this.state.showSpinner){\r\n            form=<Spinner/>;\r\n        }\r\n\r\n        let formError=null;\r\n        if(this.state.showError){\r\n            formError=(<p className='errorMesssage'>\r\n                Please fill the Fields correctly and then submit the Form.\r\n            </p>)\r\n        }\r\n\r\n        return(\r\n            <div className='formContainer'>\r\n                {formError}\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        ingredients:state.ingredients,\r\n        price:state.price,\r\n        token:state.idToken,\r\n        userId:state.localId\r\n    }\r\n};\r\n\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n    return{\r\n        addIngredients : (ing)=> dispatch(action.addIngredients(ing)),\r\n        setPrice : (price)=> dispatch(action.setPrice(price)),\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React from 'react';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport {Route,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport * as action from '../../store/action/action'\n\n\nclass Checkout extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        if(!props.ingredients){\n            console.log('setting ingredients to zero if not set');\n            //setting ingredients to zero if not set\n            props.fetchIngredients();\n        }\n    }\n\n    componentDidMount(){\n\n        // let searchParams=new URLSearchParams(this.props.location.search),\n        //     ing={},\n        //     price=0;\n        //\n        //\n        // for (let p of searchParams) {\n        //     if(p[0]==='price'){\n        //       price= +p[1];\n        //     }else{\n        //         ing[p[0]]= +p[1];\n        //     }\n        // }\n        //\n        // this.setState({\n        //     ingredients:ing,\n        //     price:price\n        // });\n\n    }\n\n\n    continueCheckout = ()=>{\n\n        //if ingredients are zero then redirect to homepage on clicking contine, else show contact form\n        let counter=0;\n        for(let key in this.props.ingredients){\n            if(Number(this.props.ingredients[key])>0)\n                counter++;\n        }\n\n        if(counter===0)\n            this.props.history.push('/');\n        else\n            this.props.history.replace('/checkout/contact-data');\n    };\n\n\n\n\n    render(){\n\n        let checkout = <Redirect to='/'/>;\n        if(this.props.ingredients){\n            checkout =(\n                <>\n                    <CheckoutSummary {...this.props} continueClick={this.continueCheckout}/>\n                    <Route path={this.props.match.path+ \"/contact-data\"} render={(props)=>{\n                        return <ContactData {...props} />\n                    }}/>\n                </>\n            )\n        }\n\n        return checkout;\n\n    }\n\n}\n\n\n\nconst mapStateToProps=state=>{\n    return {\n        ingredients:state.ingredients,\n        price:state.price\n    }\n};\n\nconst mapDispatchToProps= dispatch=>{\n    return{\n        fetchIngredients : ()=> dispatch(action.fetchIngredients()),\n    }\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Checkout);","import React from 'react';\r\n\r\n\r\nconst Order = (props)=>{\r\n\r\n    let ingredients=[];\r\n    for(let key in props.ingredients){\r\n        ingredients.push(key+' : ' + props.ingredients[key]+' ');\r\n    }\r\n\r\n    return(\r\n        <div className='order'>\r\n            <p>Ingredients: <strong>{ingredients.join(' , ')}</strong></p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Order;","import React from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport './Orders.css';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from  '../../components/UI/spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Orders extends React.Component{\r\n\r\n    state={\r\n        showSpinner:true,\r\n        orders:[]\r\n    };\r\n\r\n    componentDidMount(){\r\n\r\n\r\n\r\n        const queryParams='?auth='+this.props.token+'&orderBy=\"userId\"&equalTo=\"'+this.props.userId+'\"';\r\n\r\n        axios.get('/orders.json'+queryParams).then(resp=>{\r\n\r\n            let orders=[];\r\n\r\n            for(let key in resp.data){\r\n                orders.push({\r\n                    ...resp.data[key],\r\n                    id:key\r\n                })\r\n            }\r\n            this.setState({\r\n                showSpinner:false,\r\n                orders:orders\r\n            })\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            this.setState({\r\n                showSpinner:false,\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let orderContent;\r\n\r\n        if(this.state.showSpinner){\r\n            orderContent= <Spinner/>\r\n        }else{\r\n            let orders=this.state.orders.reverse();\r\n            orderContent= orders.map(order=>{\r\n                return <Order price={order.price} ingredients={order.ingredients} key={order.id}/>\r\n            })\r\n        }\r\n\r\n\r\n        return(\r\n            <div className='OrdersContainer'>\r\n                {orderContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        token:state.idToken,\r\n        userId:state.localId\r\n    }\r\n};\r\n\r\n// export default connect(mapStateToProps)(Orders);\r\nexport default connect(mapStateToProps)(withErrorHandler(Orders,axios));","import React from 'react';\r\nimport '../Checkout/ContactData/ContactData.css';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/action/action'\r\n\r\nconst emailRegex = RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\nclass Auth extends React.Component{\r\n\r\n\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        // showSpinner:false,\r\n        formFieldsValidation:{\r\n            email:false,\r\n            password:false,\r\n        },\r\n        showError:false,\r\n        isSignUp:true\r\n    };\r\n\r\n\r\n    handleSubmit=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({showSpinner:true});\r\n\r\n        let isValid=true;\r\n        for(let field in this.state.formFieldsValidation){\r\n            isValid = this.state.formFieldsValidation[field] && isValid;\r\n        }\r\n\r\n        if(!isValid){\r\n            this.setState({\r\n                showSpinner:false,\r\n                showError:true\r\n            });\r\n            return;\r\n        }else {\r\n            this.setState({\r\n                showError:false\r\n            });\r\n        }\r\n\r\n        this.props.auth(this.state.email,this.state.password,this.state.isSignUp,this.props.history);\r\n\r\n        this.setState({\r\n            email:'',\r\n            password:'',\r\n            showSpinner:false\r\n        });\r\n\r\n        this.resetInputField();\r\n        //\r\n        // axios.post('/auth').then(\r\n        //     response=>{\r\n        //         if(!response) return;\r\n        //\r\n        //\r\n        //         this.setState({\r\n        //             showSpinner:false\r\n        //         });\r\n        //\r\n        //         this.props.history.push('/');\r\n        //\r\n        //     }\r\n        // ).catch(error=>{\r\n        //\r\n        //     this.setState({\r\n        //         showSpinner:false\r\n        //     });\r\n        //\r\n        // })\r\n\r\n\r\n\r\n    };\r\n\r\n    resetInputField=()=>{\r\n        Object.keys(this.state.formFieldsValidation).forEach(field=>{\r\n            let input=document.getElementsByName(field)[0];\r\n            input.classList.remove('touched');\r\n            input.classList.remove('inputSuccess');\r\n        });\r\n    };\r\n\r\n    inputChangedHandler = (event) => {\r\n\r\n\r\n        if(!(event.target.classList.contains('touched'))){\r\n            event.target.classList.add('touched');\r\n        }\r\n\r\n        const {name,value}=event.target;\r\n\r\n        let stateClone={...this.state};\r\n        let fieldsClone={...stateClone.formFieldsValidation};\r\n\r\n\r\n        event.persist();\r\n\r\n        switch(name){\r\n            case \"password\":\r\n                value.trim().length > 6 ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n                break;\r\n            case \"email\":\r\n                emailRegex.test(value) ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n                break;\r\n            default:\r\n                value.trim().length >= 6 ? fieldsClone[name]=true : fieldsClone[name]=false;\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            [name]: value,\r\n            formFieldsValidation:fieldsClone\r\n        },()=>{\r\n            if(this.state.formFieldsValidation[name] === false){\r\n                event.target.classList.add('inputError');\r\n                event.target.classList.remove('inputSuccess');\r\n            }else if(this.state.formFieldsValidation[name]){\r\n                event.target.classList.remove('inputError');\r\n                event.target.classList.add('inputSuccess');\r\n            }else if(event.target.name===\"route\"){\r\n                event.target.classList.remove('inputError');\r\n                event.target.classList.add('inputSuccess');\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n    accountSwitchHandler=()=>{\r\n\r\n        this.props.resetLoginError();\r\n        this.setState(prevState => {\r\n            return{\r\n                isSignUp: !prevState.isSignUp\r\n            }\r\n        })\r\n    };\r\n\r\n    render(){\r\n\r\n        let form=<Spinner/>;\r\n\r\n        if(!this.props.showSpinner){\r\n            form=(\r\n                <form className='Form' onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name='email' placeholder='Your Email' onChange={this.inputChangedHandler} value={this.state.email}/>\r\n                    <input type=\"password\" name='password' placeholder='Password' onChange={this.inputChangedHandler} value={this.state.password}/>\r\n                    <button type='submit' className='contBtn'>\r\n                        {this.state.isSignUp? 'Sign Up': 'Login'}\r\n                    </button>\r\n                </form>\r\n            );\r\n        }\r\n\r\n        let formError=null;\r\n\r\n        if(this.state.showError){\r\n            formError=(<p className='errorMesssage'>\r\n                Please fill the Fields correctly and then submit the Form.\r\n            </p>)\r\n        }\r\n\r\n        if(this.props.responseError){\r\n            formError=(<p className='errorMesssage'>\r\n                {this.props.responseError.error.errors[0].reason}\r\n                {' !! ' }{this.props.responseError.error.message}\r\n            </p>)\r\n        }\r\n\r\n        return(\r\n            <div className='formContainer'>\r\n                <h1>{this.state.isSignUp ? 'Sign Up': 'Login'}</h1>\r\n                {formError}\r\n                {form}\r\n                    <button\r\n                        onClick={this.accountSwitchHandler}\r\n                        className='cancelBtn'>\r\n                        Switch to\r\n                        {this.state.isSignUp? ' Login': ' Sign Up'}\r\n                        </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        showSpinner:state.showAuthSpinner,\r\n        responseError:state.loginError,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n\r\n    return{\r\n        auth: (email,password,isSignUp,reduxHistory)=>dispatch(action.auth(email,password,isSignUp,reduxHistory)),\r\n        resetLoginError: ()=>dispatch(action.resetLoginError())\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Auth,axios));","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport * as action from \"../../../store/action/action\";\r\n\r\nclass Logout extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.logout();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Redirect to='/'/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps= dispatch=>{\r\n\r\n    return{\r\n        logout: ()=>dispatch(action.logout())\r\n\r\n    }\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as action from \"./store/action/action\";\n\n\n\nclass App extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.props.checkLocalStorage();\n\n    }\n\n  render(){\n\n        let route=(\n            <Switch>\n                <Route path='/auth' excat component={Auth}/>\n                <Route path='/' component={BurgerBuilder}/>\n                <Redirect to='/' />\n            </Switch>\n        );\n\n        if(this.props.isAuth){\n            route=(\n                <Switch>\n                    <Route path='/checkout' excat component={Checkout}/>\n                    <Route path='/orders' excat component={Orders}/>\n                    <Route path='/logout' excat component={Logout}/>\n                    <Route path='/' component={BurgerBuilder}/>\n                    <Redirect to='/' />\n                </Switch>\n            );\n        }\n\n\n      return (\n          <Layout>\n              {route}\n          </Layout>\n      );\n  }\n\n\n}\n\n\nconst mapStateToProps= state=>{\n    return{\n        isAuth: state.idToken !== null\n    }\n};\nconst mapDispatchToProps= dispatch=>{\n    return{\n        checkLocalStorage : ()=> dispatch(action.checkLocalStorage()),\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","\r\nconst initState={\r\n    ingredients:null,\r\n    price:1,\r\n    error:null,\r\n    orderError:null,\r\n    idToken:null,\r\n    localId:null,\r\n    loginError:null,\r\n    showAuthSpinner:false,\r\n    autheFromHome:false\r\n};\r\n\r\n\r\nconst reducer = (state=initState,action)=>{\r\n\r\n    switch (action.type) {\r\n        case \"INGREDIENTS\":\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...action.ingredients\r\n                },\r\n                error: null\r\n            };\r\n        case \"PRICE\":\r\n            return {\r\n                ...state,\r\n                price: action.price\r\n            };\r\n        case \"FETCH_ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case \"START_AUTH\":\r\n            return {\r\n                ...state,\r\n                showAuthSpinner: true\r\n            };\r\n        case \"AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                idToken: action.idToken,\r\n                localId: action.localId,\r\n                showAuthSpinner: false,\r\n                loginError:null\r\n            };\r\n        case \"AUTH_FAILED\":\r\n            return {\r\n                ...state,\r\n                showAuthSpinner: false,\r\n                loginError: action.error\r\n            };\r\n        case \"AUTH_TIMEOUT\":\r\n            return {\r\n                ...state,\r\n                idToken:null,\r\n                localId:null,\r\n                loginError:null,\r\n                autheFromHome: false,\r\n            };\r\n        case \"RESET_LOGIN_ERROR\":\r\n            return {\r\n                ...state,\r\n                loginError: null,\r\n            };\r\n        case \"HOME_TO_AUTH\":\r\n            return {\r\n                ...state,\r\n                autheFromHome: true,\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n};\r\n\r\n\r\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/reset.css';\nimport './assets/css/index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore,applyMiddleware} from 'redux';\nimport reducer from './store/reducer/reduer';\nimport {Provider} from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n//redux-thunk substiute\nconst logger = store => {\n    var storeDispatch = store.dispatch,\n        storeGetState = store.getState;\n\n    return dispatch =>{\n\n        return currentAction=>{\n\n            // console.log(currentAction);\n\n            if (typeof currentAction === 'function') {\n                return currentAction(storeDispatch, storeGetState);\n            }\n\n            // console.log('[MIDDLEWARE] currentAction',currentAction);\n\n            const resultAction = dispatch(currentAction);\n\n            // console.log('[Middleware] next state',store.getState());\n\n            return resultAction;\n\n        }\n    }\n\n};\n\nconst store = createStore(reducer,applyMiddleware(logger));\n\nconst app = (\n    <BrowserRouter basename='/burger-builder/'>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}